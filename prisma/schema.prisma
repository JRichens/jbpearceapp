// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  uniqueId                 String @default(cuid())
  reg                      String @id
  vinOriginalDvla          String?
  dvlaMake                 String?
  dvlaModel                String?
  modelSeries              String?
  modelVariant             String?
  nomCC                    String?
  colourCurrent            String?
  dvlaYearOfManufacture    String?
  originCountry            String?
  weight                   String?
  euroStatus               String?
  engineCode               String?
  engineCapacity           String?
  noCylinders              String?
  fuelType                 String?
  transmission             String?
  aspiration               String?
  maxBHP                   String?
  maxTorque                String?
  driveType                String?
  gears                    String?
  vehicleCategory          String?
  imageUrl                 String?
  exportVehicle            Boolean? @default( false )
  addedToExport            DateTime?
  breakingVehicle          Boolean? @default( false )
  addedToBreaking          DateTime?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model Task {
  id             String @default(cuid()) @id
  name           String
  description    String
  checkDate      String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  completed      Boolean? @default(false)
  completedAt    DateTime?
  completedBy    String?
}

model TaskDetails {
  id             String @default(cuid()) @id
  name           String
  description    String
}

model User {
  id            String         @id @default(cuid())
  clerkId       String
  name          String
  initials      String?
  email         String
  userType      UserType       @relation(fields: [userTypeId], references: [name])
  userTypeId    String
  weightcapture weightcapture[]
}

model UserType {
  id   String @id @default(cuid())
  name String @unique
  User User[]
}

model saveweight {
  id     String   @id @default(cuid())
  weight String
  stable Boolean
  date   DateTime @default(now())
}

model weightcapture {
  id      String   @id @default(cuid())
  weight  String
  date    DateTime @default(now())
  note    String
  userId  String
  user    User     @relation(fields: [userId], references: [id])
}